package views;

import config.Constants;
import config.GlobalValue;
import db.Database;
import java.awt.Frame;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import utils.AppUtils;
import java.sql.ResultSet;
import model.Product;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author bagon
 */
public class AdminPage extends javax.swing.JFrame {

    /**
     * Creates new form AdminPage
     */
    public AdminPage() {
        initComponents();
        
        try {
            AppUtils.fetchDataProduct("", tableProduct);
        } catch (SQLException ex) {
            Logger.getLogger(SearchItems.class.getName()).log(Level.SEVERE, null, ex);
            AppUtils.showDialogError(this, 
                    false, ex.getMessage(), "Error SQL");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableProduct = new javax.swing.JTable();
        tfKeySearch = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        btnFind = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        mapHolder = new javax.swing.JPanel();
        mapImage = new javax.swing.JLabel();
        mark = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Admin Page");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(400, 518));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel1.setText("Keyword Product (ID / Name )");

        tableProduct.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Product Name", "Quantity", "Price", "Location"
            }
        ));
        jScrollPane1.setViewportView(tableProduct);
        if (tableProduct.getColumnModel().getColumnCount() > 0) {
            tableProduct.getColumnModel().getColumn(0).setPreferredWidth(30);
        }

        btnAdd.setBackground(new java.awt.Color(68, 162, 194));
        btnAdd.setForeground(new java.awt.Color(255, 255, 255));
        btnAdd.setText("Add New Product");
        btnAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAddMouseClicked(evt);
            }
        });

        btnBack.setBackground(new java.awt.Color(68, 162, 194));
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setText("Back");
        btnBack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnBackMouseClicked(evt);
            }
        });

        btnFind.setBackground(new java.awt.Color(87, 208, 138));
        btnFind.setForeground(new java.awt.Color(255, 255, 255));
        btnFind.setText("View Location");
        btnFind.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnFindMouseClicked(evt);
            }
        });

        btnUpdate.setBackground(new java.awt.Color(205, 216, 33));
        btnUpdate.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdate.setText("Edit");
        btnUpdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnUpdateMouseClicked(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(203, 52, 52));
        btnDelete.setForeground(new java.awt.Color(255, 255, 255));
        btnDelete.setText("Delete");
        btnDelete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnDeleteMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tfKeySearch)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnFind, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 28, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tfKeySearch, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFind, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        mapHolder.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        mapImage.setIcon(new javax.swing.ImageIcon(getClass().getResource(Constants.LOCATION_MAP_IMAGE)));
        mapHolder.add(mapImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        mark.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        mark.setText("Your Product is here!");
        mark.setVisible(false);
        mark.setIcon(new javax.swing.ImageIcon(getClass().getResource(Constants.LOCATION_MARK_IMAGE)));
        mapHolder.add(mark, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 70, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 385, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(mapHolder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 553, Short.MAX_VALUE)
            .addComponent(mapHolder, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddMouseClicked
        // TODO add your handling code here:
        AppUtils.redirctApp(this, new AddProductPage());
    }//GEN-LAST:event_btnAddMouseClicked

    private void btnUpdateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUpdateMouseClicked
        try {
            // TODO add your handling code here:
            String key = this.tfKeySearch.getText();
            String condition =  "WHERE id='" + key + "' or name='" + key +"'";
            ResultSet rs = Database.get(Constants.TABLE_PRODUCT, condition);
            
            if(rs.next()){
                Product p = new Product(rs);
                AppUtils.redirctApp(this, new EditProductPage(p));
            }else{
                AppUtils.showDialogError(this, false, 
                    "[404] Data not found", "404 NOT Found");
            }
        } catch (SQLException ex) {
            Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
            AppUtils.showDialogError(this, false, 
                    ex.getMessage(), "SQL Error");
        }
    }//GEN-LAST:event_btnUpdateMouseClicked

    private void btnFindMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnFindMouseClicked
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            String key = this.tfKeySearch.getText();
            String condition =  "WHERE id='" + key + "' or name='" + key +"'";
            ResultSet rs = Database.get(Constants.TABLE_PRODUCT, condition);
            
            if(rs.next()){
                Product p = new Product(rs);
                String[] location = p.getLocation().split("#");
                int x = Integer.parseInt(location[0]);
                int y = Integer.parseInt(location[1]);
                AppUtils.setMark(mark, this.mapImage, mapHolder, x, y, this);
            }else{
                this.mark.setVisible(false);
                AppUtils.showDialogError(this, false, 
                    "[404] Data not found", "404 NOT Found");
            }
        } catch (SQLException ex) {
            this.mark.setVisible(false);
            Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
            AppUtils.showDialogError(this, false, 
                    ex.getMessage(), "SQL Error");
        }
    }//GEN-LAST:event_btnFindMouseClicked

    private void btnDeleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDeleteMouseClicked
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            String key = this.tfKeySearch.getText();
            String condition =  "WHERE id='" + key + "' or name='" + key +"'";
            ResultSet rs = Database.get(Constants.TABLE_PRODUCT, condition);
            
            if(rs.next()){
                this.mark.setVisible(false);
                Product p = new Product(rs);
                if(p.deleteFromDatabase()){
                    AppUtils.showDialogSuccess(this, false, 
                            "Success to delete data", "SUCCES TO DELETE");
                    this.tfKeySearch.setText("");
                    try {
                        AppUtils.fetchDataProduct("", tableProduct);
                    } catch (SQLException ex) {
                        Logger.getLogger(SearchItems.class.getName()).log(Level.SEVERE, null, ex);
                        AppUtils.showDialogError(this, 
                                false, ex.getMessage(), "Error SQL");
                    }
                }else{
                    AppUtils.showDialogError(this, false, 
                    "Something error failed to delete data with id " 
                            + p.getID(), "Failed to Delete");
                }
            }else{
                this.mark.setVisible(false);
                AppUtils.showDialogError(this, false, 
                    "[404] Data not found", "404 NOT Found");
            }
        } catch (SQLException ex) {
            this.mark.setVisible(false);
            Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
            AppUtils.showDialogError(this, false, 
                    ex.getMessage(), "SQL Error");
        }
    }//GEN-LAST:event_btnDeleteMouseClicked

    private void btnBackMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBackMouseClicked
        // TODO add your handling code here:
        GlobalValue.logged = null;
        AppUtils.redirctApp(this, new LoginPage());
    }//GEN-LAST:event_btnBackMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnFind;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel mapHolder;
    private javax.swing.JLabel mapImage;
    private javax.swing.JLabel mark;
    private javax.swing.JTable tableProduct;
    private javax.swing.JTextField tfKeySearch;
    // End of variables declaration//GEN-END:variables
}
